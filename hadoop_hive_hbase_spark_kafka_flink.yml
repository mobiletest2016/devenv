version: "2"

services:
  zookeeper:
    image: zookeeper:3.7.0
    container_name: zookeeper
    ports:
      - "2181:2181"
    volumes:
      - "zookeeper_data:/data"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka-0:
    image: docker.io/bitnami/kafka:3
    container_name: kafka-0
    ports:
      - "9092"
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_BROKER_ID=0
      - ALLOW_PLAINTEXT_LISTENER=yes
    volumes:
      - kafka_0_data:/bitnami/kafka
    depends_on:
      - zookeeper

  kafka-1:
    image: docker.io/bitnami/kafka:3
    container_name: kafka-1
    ports:
      - "9092"
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_BROKER_ID=1
      - ALLOW_PLAINTEXT_LISTENER=yes
    volumes:
      - kafka_1_data:/bitnami/kafka
    depends_on:
      - zookeeper

  kafka-2:
    image: docker.io/bitnami/kafka:3
    container_name: kafka-2
    ports:
      - "9092"
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_BROKER_ID=2
      - ALLOW_PLAINTEXT_LISTENER=yes
    volumes:
      - kafka_2_data:/bitnami/kafka
    depends_on:
      - zookeeper

  spark-master:
    image: bde2020/spark-master:3.2.0-hadoop3.2
    container_name: spark-master
    ports:
      - "8080:8080"
      - "7077:7077"
    environment:
      - INIT_DAEMON_STEP=setup_spark

  spark-worker-1:
    image: bde2020/spark-worker:3.2.0-hadoop3.2
    container_name: spark-worker-1
    depends_on:
      - spark-master
    ports:
      - "8081:8081"
    environment:
      - "SPARK_MASTER=spark://spark-master:7077"

  spark-worker-2:
    image: bde2020/spark-worker:3.2.0-hadoop3.2
    container_name: spark-worker-2
    depends_on:
      - spark-master
    ports:
      - "8082:8082"
    environment:
      - "SPARK_MASTER=spark://spark-master:7077"

  spark-worker-3:
    image: bde2020/spark-worker:3.2.0-hadoop3.2
    container_name: spark-worker-3
    depends_on:
      - spark-master
    ports:
      - "8083:8083"
    environment:
      - "SPARK_MASTER=spark://spark-master:7077"

  namenode:
    image: bde2020/hadoop-namenode:2.0.0-hadoop3.2.1-java8
    container_name: namenode
    volumes:
      - namenode:/hadoop/dfs/name
    environment:
      - CLUSTER_NAME=test
    env_file:
      - ./env.properties
    ports:
      - 9870:9870
      - 9000:9000

  datanode1:
    image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
    container_name: datanode1
    volumes:
      - datanode1:/hadoop/dfs/data1
    env_file:
      - ./env.properties
    environment:
      SERVICE_PRECONDITION: "namenode:9000 namenode:9870"
      HDFS_CONF_dfs_datanode_data_dir: file:///hadoop/dfs/data1
      HDFS_CONF_dfs_datanode_http_address: 0.0.0.0:9864

  datanode2:
    image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
    container_name: datanode2
    volumes:
      - datanode2:/hadoop/dfs/data2
    env_file:
      - ./env.properties
    environment:
      SERVICE_PRECONDITION: "namenode:9000 namenode:9870"
      HDFS_CONF_dfs_datanode_data_dir: file:///hadoop/dfs/data2
      HDFS_CONF_dfs_datanode_http_address: 0.0.0.0:9874

  datanode3:
    image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
    container_name: datanode3
    volumes:
      - datanode3:/hadoop/dfs/data3
    env_file:
      - ./env.properties
    environment:
      SERVICE_PRECONDITION: "namenode:9000 namenode:9870"
      HDFS_CONF_dfs_datanode_data_dir: file:///hadoop/dfs/data3
      HDFS_CONF_dfs_datanode_http_address: 0.0.0.0:9884

  resourcemanager:
    image: bde2020/hadoop-resourcemanager:2.0.0-hadoop3.2.1-java8
    container_name: resourcemanager
    restart: always
    ports:
      - "8088:8088"
    environment:
      SERVICE_PRECONDITION: "namenode:9000 namenode:9870 datanode1:9864 datanode2:9874 datanode3:9884"
    env_file:
      - ./env.properties

  nodemanager1:
    image: bde2020/hadoop-nodemanager:2.0.0-hadoop3.2.1-java8
    container_name: nodemanager1
    restart: always
    environment:
      SERVICE_PRECONDITION: "namenode:9000 namenode:9870 resourcemanager:8088 datanode1:9864 datanode2:9874 datanode3:9884"
    env_file:
      - ./env.properties

  nodemanager2:
    image: bde2020/hadoop-nodemanager:2.0.0-hadoop3.2.1-java8
    container_name: nodemanager2
    restart: always
    environment:
      SERVICE_PRECONDITION: "namenode:9000 namenode:9870 resourcemanager:8088 datanode1:9864 datanode2:9874 datanode3:9884"
    env_file:
      - ./env.properties

  nodemanager3:
    image: bde2020/hadoop-nodemanager:2.0.0-hadoop3.2.1-java8
    container_name: nodemanager3
    restart: always
    environment:
      SERVICE_PRECONDITION: "namenode:9000 namenode:9870 resourcemanager:8088 datanode1:9864 datanode2:9874 datanode3:9884"
    env_file:
      - ./env.properties

  historyserver:
    image: bde2020/hadoop-historyserver:2.0.0-hadoop3.2.1-java8
    container_name: historyserver
    restart: always
    environment:
      SERVICE_PRECONDITION: "namenode:9000 namenode:9870 resourcemanager:8088 datanode1:9864 datanode2:9874 datanode3:9884"
    volumes:
      - hadoop_historyserver:/hadoop/yarn/timeline
    env_file:
      - ./env.properties

  hbase-master:
    image: bde2020/hbase-master:1.0.0-hbase1.2.6
    container_name: hbase-master
    hostname: hbase-master
    env_file:
      - ./env.properties
    environment:
      SERVICE_PRECONDITION: "zookeeper:2181 namenode:9000 namenode:9870 resourcemanager:8088 datanode1:9864 datanode2:9874 datanode3:9884"
    ports:
      - 16010:16010

  hbase-region:
    image: bde2020/hbase-regionserver:1.0.0-hbase1.2.6
    container_name: hbase-regions
    hostname: hbase-region
    env_file:
      - ./env.properties
    environment:
      HBASE_CONF_hbase_regionserver_hostname: hbase-region
      SERVICE_PRECONDITION: "zookeeper:2181 namenode:9000 namenode:9870 resourcemanager:8088 datanode1:9864 datanode2:9874 datanode3:9884"
    ports:
      - 16030:16030

  hive-server:
    image: bde2020/hive:2.3.2-postgresql-metastore
    container_name: hive-server
    env_file:
      - ./env.properties
    environment:
      HIVE_CORE_CONF_javax_jdo_option_ConnectionURL: "jdbc:postgresql://hive-metastore/metastore"
      SERVICE_PRECONDITION: "hive-metastore:9083"
    ports:
      - "10000:10000"

  hive-metastore:
    image: bde2020/hive:2.3.2-postgresql-metastore
    container_name: hive-metastore
    env_file:
      - ./env.properties
    command: /opt/hive/bin/hive --service metastore
    environment:
      SERVICE_PRECONDITION: "hive-metastore-postgresql:5432 namenode:9000 namenode:9870 resourcemanager:8088 datanode1:9864 datanode2:9874 datanode3:9884"
    ports:
      - "9083:9083"

  hive-metastore-postgresql:
    image: bde2020/hive-metastore-postgresql:2.3.0
    container_name: hive-metastore-postgresql

  jobmanager:
    image: flink:latest
    container_name: jobmanager
    ports:
      - "8091:8091"
    command: jobmanager
    environment:
      - |
        FLINK_PROPERTIES=
        rest.port: 8091
        jobmanager.rpc.address: jobmanager

  taskmanager:
    image: flink:latest
    depends_on:
      - jobmanager
    command: taskmanager
    scale: 3
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: jobmanager
        taskmanager.numberOfTaskSlots: 2

  sql-client:
    image: flink:latest
    container_name: sql-client
    command: bin/sql-client.sh
    depends_on:
      - jobmanager
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: jobmanager

volumes:
  namenode:
  datanode1:
  datanode2:
  datanode3:
  hadoop_historyserver:
  zookeeper_data:
    driver: local
  kafka_0_data:
    driver: local
  kafka_1_data:
    driver: local
  kafka_2_data:
    driver: local
