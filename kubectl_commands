INSTALL microk8s:

sudo snap install microk8s --classic

microk8s enable dns
microk8s enable registry
microk8s enable istio
microk8s enable helm
microk8s enable helm3


Basic commands:

kubectl cluster-info

kubectl get pods

kubectl get pods --all-namespaces

kubectl get pods,services --all-namespaces

kubectl describe pod registry-6c9fcc695f-r4sgz  --namespace=container-registry

kubectl get pod registry-6c9fcc695f-r4sgz --namespace=container-registry -o wide


Runtime Edit:

kubectl edit pod registry-6c9fcc695f-r4sgz --namespace=container-registry


JSON:

kubectl get pod registry-6c9fcc695f-r4sgz --namespace=container-registry -o json

kubectl get pod registry-6c9fcc695f-r4sgz --namespace=container-registry -o jsonpath --template={.status.podIP}

kubectl get pod registry-6c9fcc695f-r4sgz --namespace=container-registry -o jsonpath --template={.status.hostIP}


Label:

kubectl label pods registry-6c9fcc695f-r4sgz --namespace=container-registry color=blue

kubectl describe pod registry-6c9fcc695f-r4sgz --namespace=container-registry  | grep color

kubectl label pods registry-6c9fcc695f-r4sgz --namespace=container-registry color-			Remove label


Logs:

kubectl logs registry-6c9fcc695f-r4sgz --namespace=container-registry


Command inside container:

kubectl exec registry-6c9fcc695f-r4sgz --namespace=container-registry -- find / -name *log

kubectl exec registry-6c9fcc695f-r4sgz --namespace=container-registry -- hostname


Attach:

kubectl attach -it <pod-name>

Copy files:
kubectl cp <pod-name>:</path/to/remote/file> </path/to/local/file>


kubectl port-forward <pod-name> 8080:80



kubectl get events
kubectl top nodes
kubectl top pods



kubectl cordon
kubectl drain
kubectl uncordon
